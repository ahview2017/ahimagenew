<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.deepai.photo.mapper.CpMsgTimerMapper" >
	<resultMap id="CpMsgTimer" type="com.deepai.photo.bean.CpMsgTimer" >
	    <id column="ID" property="id" jdbcType="INTEGER" />
	    <result column="TYPE" property="type" jdbcType="INTEGER" />
	    <result column="CLASS_ID" property="classId" jdbcType="INTEGER" />
		<result column="EXECUTE_TIME" property="executeTime" jdbcType="TIMESTAMP" />
	    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
	    <result column="CREATE_USER" property="createUser" jdbcType="VARCHAR" />
	    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
	    <result column="UPDATE_USER" property="updateUser" jdbcType="VARCHAR" />
	    <result column="STATUS" property="status" jdbcType="INTEGER" />
	    <result column="DELETE_FLAG" property="deleteFlag" jdbcType="INTEGER" />
	    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
 	 </resultMap>
 	 <sql id="Example_Where_Clause" >
	    <where >
	      <foreach collection="oredCriteria" item="criteria" separator="or" >
	        <if test="criteria.valid" >
	          <trim prefix="(" suffix=")" prefixOverrides="and" >
	            <foreach collection="criteria.criteria" item="criterion" >
	              <choose >
	                <when test="criterion.noValue" >
	                  and ${criterion.condition}
	                </when>
	                <when test="criterion.singleValue" >
	                  and ${criterion.condition} #{criterion.value}
	                </when>
	                <when test="criterion.betweenValue" >
	                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
	                </when>
	                <when test="criterion.listValue" >
	                  and ${criterion.condition}
	                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
	                    #{listItem}
	                  </foreach>
	                </when>
	              </choose>
	            </foreach>
	          </trim>
	        </if>
	      </foreach>
	    </where>
	  </sql>
  	  <sql id="Base_Column_List" >
	    ID, CREATE_TIME,CREATE_USER,UPDATE_TIME,UPDATE_USER,DELETE_FLAG, TYPE, EXECUTE_TIME,CLASS_ID,STATUS,REMARK
	  </sql>
	  
	  
	  <select id="selectMassSMSTasks" resultMap="CpMsgTimer" >
	      select * from cp_msg_timer where TYPE=0 and STATUS=0 and DELETE_FLAG=0 
	  </select>
	  
	  <select id="selectByClassId" resultMap="CpMsgTimer" parameterType="java.lang.Integer">
	      select * from cp_msg_timer where TYPE=0  and DELETE_FLAG=0 
		  and CLASS_ID=#{classId}   
	  </select>
	  
	  
	  <update id="updateByPrimaryKey" parameterType="com.deepai.photo.bean.CpMsgTimer" >
	    update cp_msg_timer
	    <set >
	      <if test="type != null" >
	        TYPE = #{type,jdbcType=INTEGER},
	      </if>
	      <if test="classId != null" >
	        CLASS_ID = #{classId,jdbcType=INTEGER},
	      </if>
	      <if test="status != null" >
	        STATUS = #{status,jdbcType=INTEGER},
	      </if>
	      <if test="executeTime != null" >
	        EXECUTE_TIME = #{executeTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="createTime != null" >
	        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="createUser != null" >
	        CREATE_USER = #{createUser,jdbcType=VARCHAR},
	      </if>
	      <if test="updateTime != null" >
	        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="updateUser != null" >
	        UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
	      </if>
	      <if test="remark != null" >
	        REMARK = #{remark,jdbcType=VARCHAR},
	      </if>
	      <if test="deleteFlag != null" >
	        DELETE_FLAG = #{deleteFlag,jdbcType=INTEGER},
	      </if>
	    </set>
	    where ID = #{id,jdbcType=INTEGER}
	 </update>
	  
	 <!-- 插入定时任务记录-->
	 <insert id="insertSelective" parameterType="com.deepai.photo.bean.CpMsgTimer">
			<selectKey resultType="java.lang.Integer" keyProperty="id"
				order="AFTER">
				SELECT LAST_INSERT_ID()
			</selectKey>
			insert into cp_msg_timer
			<trim prefix="(" suffix=")" suffixOverrides=",">
				<if test="createTime != null">
					CREATE_TIME,
				</if>
				<if test="createUser != null">
					CREATE_USER,
				</if>
				<if test="updateTime != null">
					UPDATE_TIME,
				</if>
				<if test="updateUser != null">
					UPDATE_USER,
				</if>
				<if test="executeTime != null">
					EXECUTE_TIME,
				</if>
				<if test="type != null">
					TYPE,
				</if>
				<if test="status != null">
					STATUS,
				</if>
				<if test="deleteFlag != null">
					DELETE_FLAG,
				</if>
				<if test="classId != null">
					CLASS_ID,
				</if>
				<if test="remark != null">
					REMARK,
				</if>
			</trim>
			<trim prefix="values (" suffix=")" suffixOverrides=",">
				<if test="createTime != null">
					#{createTime,jdbcType=TIMESTAMP},
				</if>
				<if test="createUser != null">
					#{createUser,jdbcType=VARCHAR},
				</if>
				<if test="updateTime != null">
					#{updateTime,jdbcType=TIMESTAMP},
				</if>
				<if test="updateUser != null">
					#{updateUser,jdbcType=VARCHAR},
				</if>
				<if test="executeTime != null">
					#{executeTime,jdbcType=TIMESTAMP},
				</if>
				<if test="type != null">
					#{type,jdbcType=Integer},
				</if>
				<if test="remark != null">
					#{remark,jdbcType=VARCHAR},
				</if>
				<if test="status != null">
					#{status,jdbcType=INTEGER},
				</if>
				<if test="deleteFlag != null">
					#{deleteFlag,jdbcType=INTEGER},
				</if>
				<if test="classId != null">
					#{classId,jdbcType=INTEGER},
				</if>
			</trim>
	  </insert>
	  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
	    delete from cp_msg_timer
	    where ID = #{id,jdbcType=INTEGER}
	  </delete>
	  
	   <delete id="deleteByClassId" parameterType="java.lang.Integer" >
	    delete from cp_msg_timer
	    where CLASS_ID = #{classId,jdbcType=INTEGER}
	  </delete>
	  
</mapper>