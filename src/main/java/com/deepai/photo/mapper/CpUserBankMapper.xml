<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.deepai.photo.mapper.CpUserBankMapper">
	<resultMap id="BaseResultMap" type="com.deepai.photo.bean.CpUserBank">
		<id column="ID" property="id" jdbcType="INTEGER" />
		<result column="BANK_USERNAME" property="bankUsername"
			jdbcType="VARCHAR" />
		<result column="BANK_NAME" property="bankName" jdbcType="VARCHAR" />
		<result column="BANK_ID_CARD" property="bankIdCard" jdbcType="VARCHAR" />
		<result column="BANK_ACCOUNT" property="bankAccount" jdbcType="VARCHAR" />
		<result column="USER_ID" property="userId" jdbcType="INTEGER" />
		<result column="IS_DEFAULT" property="isDefault" jdbcType="INTEGER" />
		<result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		ID, BANK_USERNAME, BANK_NAME, BANK_ID_CARD, BANK_ACCOUNT, USER_ID,
		IS_DEFAULT, CREATE_TIME
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.deepai.photo.bean.CpUserBankExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from cp_user_bank
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from cp_user_bank
		where ID = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from cp_user_bank
		where ID = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.deepai.photo.bean.CpUserBankExample">
		delete from cp_user_bank
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.deepai.photo.bean.CpUserBank">
		<selectKey resultType="java.lang.Integer" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into cp_user_bank (BANK_USERNAME, BANK_NAME, BANK_ID_CARD,
		BANK_ACCOUNT, USER_ID, IS_DEFAULT,
		CREATE_TIME)
		values (#{bankUsername,jdbcType=VARCHAR}, #{bankName,jdbcType=VARCHAR},
		#{bankIdCard,jdbcType=VARCHAR},
		#{bankAccount,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{isDefault,jdbcType=INTEGER},
		#{createTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.deepai.photo.bean.CpUserBank">
		<selectKey resultType="java.lang.Integer" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into cp_user_bank
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="bankUsername != null">
				BANK_USERNAME,
			</if>
			<if test="bankName != null">
				BANK_NAME,
			</if>
			<if test="bankIdCard != null">
				BANK_ID_CARD,
			</if>
			<if test="bankAccount != null">
				BANK_ACCOUNT,
			</if>
			<if test="userId != null">
				USER_ID,
			</if>
			<if test="isDefault != null">
				IS_DEFAULT,
			</if>
			<if test="createTime != null">
				CREATE_TIME,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="bankUsername != null">
				#{bankUsername,jdbcType=VARCHAR},
			</if>
			<if test="bankName != null">
				#{bankName,jdbcType=VARCHAR},
			</if>
			<if test="bankIdCard != null">
				#{bankIdCard,jdbcType=VARCHAR},
			</if>
			<if test="bankAccount != null">
				#{bankAccount,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="isDefault != null">
				#{isDefault,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.deepai.photo.bean.CpUserBankExample"
		resultType="java.lang.Integer">
		select count(*) from cp_user_bank
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update cp_user_bank
		<set>
			<if test="record.id != null">
				ID = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.bankUsername != null">
				BANK_USERNAME = #{record.bankUsername,jdbcType=VARCHAR},
			</if>
			<if test="record.bankName != null">
				BANK_NAME = #{record.bankName,jdbcType=VARCHAR},
			</if>
			<if test="record.bankIdCard != null">
				BANK_ID_CARD = #{record.bankIdCard,jdbcType=VARCHAR},
			</if>
			<if test="record.bankAccount != null">
				BANK_ACCOUNT = #{record.bankAccount,jdbcType=VARCHAR},
			</if>
			<if test="record.userId != null">
				USER_ID = #{record.userId,jdbcType=INTEGER},
			</if>
			<if test="record.isDefault != null">
				IS_DEFAULT = #{record.isDefault,jdbcType=INTEGER},
			</if>
			<if test="record.createTime != null">
				CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update cp_user_bank
		set ID = #{record.id,jdbcType=INTEGER},
		BANK_USERNAME = #{record.bankUsername,jdbcType=VARCHAR},
		BANK_NAME = #{record.bankName,jdbcType=VARCHAR},
		BANK_ID_CARD = #{record.bankIdCard,jdbcType=VARCHAR},
		BANK_ACCOUNT = #{record.bankAccount,jdbcType=VARCHAR},
		USER_ID = #{record.userId,jdbcType=INTEGER},
		IS_DEFAULT = #{record.isDefault,jdbcType=INTEGER},
		CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.deepai.photo.bean.CpUserBank">
		update cp_user_bank
		<set>
			<if test="bankUsername != null">
				BANK_USERNAME = #{bankUsername,jdbcType=VARCHAR},
			</if>
			<if test="bankName != null">
				BANK_NAME = #{bankName,jdbcType=VARCHAR},
			</if>
			<if test="bankIdCard != null">
				BANK_ID_CARD = #{bankIdCard,jdbcType=VARCHAR},
			</if>
			<if test="bankAccount != null">
				BANK_ACCOUNT = #{bankAccount,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				USER_ID = #{userId,jdbcType=INTEGER},
			</if>
			<if test="isDefault != null">
				IS_DEFAULT = #{isDefault,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.deepai.photo.bean.CpUserBank">
		update cp_user_bank
		set BANK_USERNAME = #{bankUsername,jdbcType=VARCHAR},
		BANK_NAME = #{bankName,jdbcType=VARCHAR},
		BANK_ID_CARD = #{bankIdCard,jdbcType=VARCHAR},
		BANK_ACCOUNT = #{bankAccount,jdbcType=VARCHAR},
		USER_ID = #{userId,jdbcType=INTEGER},
		IS_DEFAULT = #{isDefault,jdbcType=INTEGER},
		CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<!-- 自写sql -->
	
	<!-- 设置默认银行卡 -->
	<update id="setDefault" parameterType="integer">
		UPDATE cp_user_bank c,(SELECT MAX(d.CREATE_TIME) as tm from cp_user_bank d
		where d.USER_ID=#{id})e
		set c.IS_DEFAULT=0 where c.CREATE_TIME = e.tm
	</update>
	<!-- 更改默认银行卡 -->
	<update id="setBankdef" parameterType="map">
		update cp_user_bank set IS_DEFAULT=null where USER_ID=#{uid};
		update cp_user_bank set IS_DEFAULT=0 where USER_ID=#{uid} and id=#{id}
	</update>
</mapper>